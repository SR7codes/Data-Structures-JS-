Insertion in a Tree:

class node {
  constructor (value) {
    this.value= value;
    this.left = null;
    this.right = null;
  }
}

class BinaryTree {
  constructor () {
    this.root = null;
  }

  insert (value) {
    const nwenode = new node (value);
    if (this.root === null) {
      this.root = nwenode;
    }

    let current = this.root;
    while (true) {
      if (value<current.value) {
        if (current.left === null) {
          current.left = nwenode;
          return this;
        }
        current = current.left;
        
       {
       if (current.right === null) {
       current.right = nwenode;
       return this;
        }
        current = current.right; 
      }
      }
    }
  }

  lookup (value) {
    if (this.root ===  null) {
      return false;
    }

    let current = this.root;
    while (true) {
      if (value<current.value) {
        current = current.left;
      }
      else if (value > current.value) {
        current = current.value;
      }
      else if (value === current.value) {
        return current;
      }
    }
  }
}


const newtree = new BinaryTree ();
newtree.insert (90);

console.log (newtree);